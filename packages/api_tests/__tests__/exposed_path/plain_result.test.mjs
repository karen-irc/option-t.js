/* eslint sort-keys: ["error", "asc", { caseSensitive: true }] */

import test from 'ava';
import { testImportExposedPath } from './helper.mjs';

testImportExposedPath(
    test,
    Object.keys({
        './PlainResult': null,
        './PlainResult/Result': null,
        './PlainResult/and': null,
        './PlainResult/andThen': null,
        './PlainResult/andThenAsync': null,
        './PlainResult/asMut': null,
        './PlainResult/drop': null,
        './PlainResult/equal': null,
        './PlainResult/flatten': null,
        './PlainResult/fromPromiseSettledResult': null,
        './PlainResult/inspect': null,
        './PlainResult/isErrAnd': null,
        './PlainResult/isOkAnd': null,
        './PlainResult/map': null,
        './PlainResult/mapAsync': null,
        './PlainResult/mapErr': null,
        './PlainResult/mapErrAsync': null,
        './PlainResult/mapOr': null,
        './PlainResult/mapOrAsync': null,
        './PlainResult/mapOrElse': null,
        './PlainResult/mapOrElseAsync': null,
        './PlainResult/namespace': null,
        './PlainResult/or': null,
        './PlainResult/orElse': null,
        './PlainResult/orElseAsync': null,
        './PlainResult/toNullable': null,
        './PlainResult/toUndefinable': null,
        './PlainResult/transpose': null,
        './PlainResult/tryCatch': null,
        './PlainResult/tryCatchAsync': null,
        './PlainResult/unwrapOr': null,
        './PlainResult/unwrapOrElse': null,
        './PlainResult/unwrapOrElseAsync': null,
        './PlainResult/unwrapOrThrowError': null,

        './plain_result': null,
        './plain_result/and': null,
        './plain_result/and_then': null,
        './plain_result/and_then_async': null,
        './plain_result/as_mut': null,
        './plain_result/drop': null,
        './plain_result/equal': null,
        './plain_result/flatten': null,
        './plain_result/from_promise_settled_result': null,
        './plain_result/inspect': null,
        './plain_result/is_err_and': null,
        './plain_result/is_ok_and': null,
        './plain_result/map': null,
        './plain_result/map_async': null,
        './plain_result/map_err': null,
        './plain_result/map_err_async': null,
        './plain_result/map_or': null,
        './plain_result/map_or_async': null,
        './plain_result/map_or_else': null,
        './plain_result/map_or_else_async': null,
        './plain_result/namespace': null,
        './plain_result/or': null,
        './plain_result/or_else': null,
        './plain_result/or_else_async': null,
        './plain_result/result': null,
        './plain_result/to_nullable': null,
        './plain_result/to_undefinable': null,
        './plain_result/transpose': null,
        './plain_result/try_catch': null,
        './plain_result/try_catch_async': null,
        './plain_result/unwrap_or': null,
        './plain_result/unwrap_or_else': null,
        './plain_result/unwrap_or_else_async': null,
        './plain_result/unwrap_or_throw_error': null,
    }),
);
